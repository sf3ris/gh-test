# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        env:
          GITHUB_TOKEN: ${{ secrets.SECRET_TOKEN }}
          BRANCH_NAME: 'main' 
        run: |
          echo 'test_file_data' > test_file
          #!/bin/sh

          # check values
          if [ -z "${GITHUB_TOKEN}" ]; then
              echo "error: not found GITHUB_TOKEN"
              exit 1
          fi

          if [ -z "${BRANCH_NAME}" ]; then
             export BRANCH_NAME=master
          fi

          # initialize git
          remote_repo="https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git"
          git config http.sslVerify false
          git config user.name "Automated Publisher"
          git config user.email "actions@users.noreply.github.com"
          git remote add publisher "${remote_repo}"
          git show-ref # useful for debugging
          git branch --verbose

          # install lfs hooks
          git lfs install

          # publish any new files
          git checkout ${BRANCH_NAME}
          git add -A
          timestamp=$(date -u)
          git commit -m "Automated publish: ${timestamp} ${GITHUB_SHA}" || exit 0
          git pull --rebase publisher ${BRANCH_NAME}
          git push publisher ${BRANCH_NAME}
